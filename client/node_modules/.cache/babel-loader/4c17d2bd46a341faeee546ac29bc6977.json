{"ast":null,"code":"var _jsxFileName = \"/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js\";\nimport React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddIngredient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      userInput: '',\n      choices: []\n    };\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  } // mise Ã  jour userInput\n\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  render() {\n    let showSelection;\n\n    if (this.props.ing.value) {\n      showSelection = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", this.props.ing.value.description, \" \", this.props.ing.value.nutrientFacts.kcal, \" Kcal, \", this.props.ing.value.nutrientFacts.carbohydrate, \" G, \", this.props.ing.value.nutrientFacts.protein, \" P, \", this.props.ing.value.nutrientFacts.lipid, \" L \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3 w-50\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: !this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [choice.description, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => this.props.selectChoice(e, this.props.index, index),\n                  children: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 90\n                }, this)]\n              }, 'choices.' + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.handleClose,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: 'compute.' + this.props.index,\n        className: \"mb-3 w-50\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Ingredient n\\xB0\", this.props.index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"userInputName\",\n          placeholder: this.props.ing.userInputName,\n          onChange: e => this.props.handleChangeIng(e, this.props.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"userInputQuantity\",\n          placeholder: this.props.ing.userInputQuantity,\n          onChange: e => this.props.handleChangeIng(e, this.props.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: this.handleShow,\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: e => this.props.removeIng(e, this.props.index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), showSelection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddIngredient;","map":{"version":3,"sources":["/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js"],"names":["React","Form","Modal","Button","Container","AddIngredient","Component","constructor","props","handleChange","bind","handleShow","handleClose","state","show","userInput","choices","setState","event","target","name","value","render","showSelection","ing","description","nutrientFacts","kcal","carbohydrate","protein","lipid","map","choice","index","e","selectChoice","userInputName","handleChangeIng","userInputQuantity","removeIng"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\n\nclass AddIngredient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            show: false,\n            userInput: '',\n            choices: []\n        };\n    }\n    handleShow() {\n        this.setState({show: true});\n    }\n    handleClose() {\n        this.setState({show: false});\n    }\n    // mise Ã  jour userInput\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n    render() {\n        let showSelection;\n        if (this.props.ing.value) {\n            showSelection = <p> {this.props.ing.value.description} {this.props.ing.value.nutrientFacts.kcal} Kcal, {this.props.ing.value.nutrientFacts.carbohydrate} G, {this.props.ing.value.nutrientFacts.protein} P, {this.props.ing.value.nutrientFacts.lipid} L </p>\n        }\n        return (\n            <Container className=\"p-3 w-50\">\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ul>\n                            {!this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n                                return <li key={'choices.' + index}>{choice.description} <button onClick={e => this.props.selectChoice(e, this.props.index, index)}>select</button></li>\n                            })}\n                        </ul>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                    {/*<Form>*/}\n                        <Form.Group controlId={'compute.' + this.props.index} className=\"mb-3 w-50\">\n                            <Form.Label>Ingredient nÂ°{this.props.index}</Form.Label>\n                            <Form.Control type=\"text\" name=\"userInputName\" placeholder={this.props.ing.userInputName} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                            <Form.Control type=\"text\" name=\"userInputQuantity\" placeholder={this.props.ing.userInputQuantity} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                        </Form.Group>\n                        {/*<Button variant=\"primary\" onClick={e => this.props.findIng(e, this.props.index)}>*/}\n                         {/*Find*/}\n                        {/*</Button>*/}\n                        <Button variant=\"primary\" onClick={this.handleShow}>\n                            Launch demo modal\n                        </Button>\n                        <Button variant=\"danger\" onClick={e => this.props.removeIng(e, this.props.index)}>\n                            Remove\n                        </Button>\n\n                        {showSelection}\n                    {/*</Form>*/}\n            </Container>\n        );\n    }\n}\nexport default AddIngredient;"]},"metadata":{},"sourceType":"module"}