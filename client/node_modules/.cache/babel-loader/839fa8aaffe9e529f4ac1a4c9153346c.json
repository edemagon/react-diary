{"ast":null,"code":"var _jsxFileName = \"/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js\";\nimport React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddIngredient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      userInput: '',\n      choices: []\n    };\n  } // mise Ã  jour userInput\n\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  render() {\n    let showSelection;\n\n    if (this.props.ing.value) {\n      showSelection = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", this.props.ing.value.description, \" \", this.props.ing.value.nutrientFacts.kcal, \" Kcal, \", this.props.ing.value.nutrientFacts.carbohydrate, \" G, \", this.props.ing.value.nutrientFacts.protein, \" P, \", this.props.ing.value.nutrientFacts.lipid, \" L \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3 w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal fade\",\n        id: \"exampleModal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-dialog\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"modal-title\",\n                id: \"exampleModalLabel\",\n                children: \"Select ingredient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-close\",\n                \"data-bs-dismiss\": \"modal\",\n                \"aria-label\": \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: !this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [choice.description, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => this.props.selectChoice(e, this.props.index, index),\n                      children: \"select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 102\n                    }, this)]\n                  }, 'choices.' + index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 52\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-footer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-bs-dismiss\": \"modal\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                children: \"Save changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: 'compute.' + this.props.index,\n        className: \"mb-3 w-50\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Ingredient n\\xB0\", this.props.index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"userInputName\",\n          placeholder: this.props.ing.userInputName,\n          onChange: e => this.props.handleChangeIng(e, this.props.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"userInputQuantity\",\n          placeholder: this.props.ing.userInputQuantity,\n          onChange: e => this.props.handleChangeIng(e, this.props.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-bs-toggle\": \"modal\",\n        \"data-bs-target\": \"#exampleModal\",\n        onClick: e => this.props.findIng(e, this.props.index),\n        children: \"Launch demo modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: e => this.props.removeIng(e, this.props.index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), showSelection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddIngredient;","map":{"version":3,"sources":["/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js"],"names":["React","Form","Button","Container","AddIngredient","Component","constructor","props","handleChange","bind","state","userInput","choices","event","target","name","setState","value","render","showSelection","ing","description","nutrientFacts","kcal","carbohydrate","protein","lipid","map","choice","index","e","selectChoice","userInputName","handleChangeIng","userInputQuantity","findIng","removeIng"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\n\nclass AddIngredient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            userInput: '',\n            choices: []\n        };\n    }\n    // mise Ã  jour userInput\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n    render() {\n        let showSelection;\n        if (this.props.ing.value) {\n            showSelection = <p> {this.props.ing.value.description} {this.props.ing.value.nutrientFacts.kcal} Kcal, {this.props.ing.value.nutrientFacts.carbohydrate} G, {this.props.ing.value.nutrientFacts.protein} P, {this.props.ing.value.nutrientFacts.lipid} L </p>\n        }\n        return (\n            <Container className=\"p-3 w-50\">\n                    <div className=\"modal fade\" id=\"exampleModal\">\n                        <div className=\"modal-dialog\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Select ingredient</h5>\n                                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <ul>\n                                        {!this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n                                            return <li key={'choices.' + index}>{choice.description} <button onClick={e => this.props.selectChoice(e, this.props.index, index)}>select</button></li>\n                                        })}\n                                    </ul>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                    <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/*<Form>*/}\n                        <Form.Group controlId={'compute.' + this.props.index} className=\"mb-3 w-50\">\n                            <Form.Label>Ingredient nÂ°{this.props.index}</Form.Label>\n                            <Form.Control type=\"text\" name=\"userInputName\" placeholder={this.props.ing.userInputName} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                            <Form.Control type=\"text\" name=\"userInputQuantity\" placeholder={this.props.ing.userInputQuantity} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                        </Form.Group>\n                        {/*<Button variant=\"primary\" onClick={e => this.props.findIng(e, this.props.index)}>*/}\n                         {/*Find*/}\n                        {/*</Button>*/}\n                <button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={e => this.props.findIng(e, this.props.index)}>\n                    Launch demo modal\n                </button>\n                        <Button variant=\"danger\" onClick={e => this.props.removeIng(e, this.props.index)}>\n                            Remove\n                        </Button>\n\n                        {showSelection}\n                    {/*</Form>*/}\n            </Container>\n        );\n    }\n}\nexport default AddIngredient;"]},"metadata":{},"sourceType":"module"}