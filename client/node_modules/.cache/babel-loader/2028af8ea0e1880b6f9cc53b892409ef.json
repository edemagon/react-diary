{"ast":null,"code":"var _jsxFileName = \"/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js\";\nimport React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddIngredient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      name: 'undef',\n      protein: 0,\n      glucids: 0,\n      lipids: 0\n    };\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  handleChangeIng(event, index) {\n    const target = event.target;\n    const value = target.value;\n    let ingredients = this.state.ingredients.slice();\n    ingredients[index] = value;\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  findIng(event) {\n    let value = event.target.value; // let ApiBase= \"https://api.nal.usda.gov/fdc/v1/foods/search?query=XXX&pageSize=&api_key=tgyxI8kaDGTFx9V50jKbPXTpMnzKSEJG3c6oAZsD\";\n\n    let apiBase = \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=DEMO_KEY&\";\n    let requestBody = {\n      \"query\": value,\n      \"generalSearchInput\": value,\n      \"includeDataTypes\": {\n        \"Foundation\": true\n      },\n      \"includeMarketCountries\": null,\n      \"referenceFoodsCheckBox\": true,\n      \"exactBrandOwner\": null,\n      \"requireAllWords\": true,\n      \"pageNumber\": 1,\n      \"sortCriteria\": {\n        \"sortColumn\": \"description\",\n        \"sortDirection\": \"asc\"\n      }\n    }; // get all entities - GET\n\n    fetch(apiBase, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestBody)\n    }).then(response => response.json()).then(response => {\n      alert(JSON.stringify(response.foods[0]));\n      let firstValue = response.foods[0];\n      let nutrientFacts = {};\n      firstValue.foodNutrients.forEach(nutrientFact => {\n        switch (nutrientFact.nutrientName) {}\n\n        if (nutrientFact.nutrientName === \"Protein\") {\n          nutrientFacts['Protein'] = nutrientFact.value;\n        } else if (nutrientFact.nutrientName === \"Carbohydrate, by difference\") {\n          nutrientFacts['Carbohydrate'] = nutrientFact.value;\n        } else if (nutrientFact.nutrientName === \"Energy (Atwater General Factors)\") {\n          nutrientFacts['kcal'] = nutrientFact.value;\n        } else if (nutrientFact.nutrientName === \"Total lipid (fat)\") {\n          nutrientFacts['lipid'] = nutrientFact.value;\n        } else if (nutrientFact.nutrientName === \"Sugars, Total NLEA\") {\n          nutrientFacts['sugars'] = nutrientFact.value;\n        }\n      });\n      this.setState({\n        rawValue: firstValue,\n        fdcId: firstValue.fdcId,\n        foodCategory: firstValue.foodCategory,\n        description: firstValue.description,\n        energy: firstValue.foodNutrients\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    alert('Une recette a été envoyé : ' + JSON.stringify(this.state));\n    event.preventDefault();\n  }\n\n  handleClickIngredients(event) {\n    let ingredients = this.state.ingredients.slice();\n    ingredients.push(this.state.new);\n    this.setState({\n      ingredients: ingredients\n    });\n    event.preventDefault();\n  }\n\n  addIng() {\n    let ingredients = this.state.ingredients.slice();\n    ingredients.push('new');\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3 w-50\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'compute.' + this.props.index,\n          className: \"mb-3 w-50\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Ingredient n\\xB0\", this.props.index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"new\",\n            placeholder: this.props.ing,\n            onChange: e => this.props.handleChangeIng(e, this.props.index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddIngredient;","map":{"version":3,"sources":["/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js"],"names":["React","Form","Button","Container","AddIngredient","Component","constructor","props","handleChange","bind","handleClick","state","name","protein","glucids","lipids","event","target","setState","value","handleChangeIng","index","ingredients","slice","findIng","apiBase","requestBody","fetch","method","headers","body","JSON","stringify","then","response","json","alert","foods","firstValue","nutrientFacts","foodNutrients","forEach","nutrientFact","nutrientName","rawValue","fdcId","foodCategory","description","energy","catch","err","console","log","preventDefault","handleClickIngredients","push","new","addIng","render","ing","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\n\nclass AddIngredient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n            name: 'undef',\n            protein: 0,\n            glucids: 0,\n            lipids: 0\n        };\n    }\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n    handleChangeIng(event, index) {\n        const target = event.target;\n        const value = target.value;\n        let ingredients = this.state.ingredients.slice();\n        ingredients[index] = value;\n        this.setState({\n            ingredients: ingredients\n        });\n    }\n    findIng(event) {\n        let value = event.target.value;\n        // let ApiBase= \"https://api.nal.usda.gov/fdc/v1/foods/search?query=XXX&pageSize=&api_key=tgyxI8kaDGTFx9V50jKbPXTpMnzKSEJG3c6oAZsD\";\n        let apiBase= \"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=DEMO_KEY&\";\n        let requestBody= {\n            \"query\": value,\n            \"generalSearchInput\": value,\n            \"includeDataTypes\" : {\n                \"Foundation\": true\n            },\n            \"includeMarketCountries\": null,\n            \"referenceFoodsCheckBox\": true,\n            \"exactBrandOwner\": null,\n            \"requireAllWords\": true,\n            \"pageNumber\": 1,\n            \"sortCriteria\":{\n                \"sortColumn\":\"description\",\n                \"sortDirection\":\"asc\"\n            }\n        };\n        // get all entities - GET\n        fetch(apiBase, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestBody)\n        })\n            .then(response => response.json())\n            .then(response => {\n                alert(JSON.stringify(response.foods[0]));\n                let firstValue= response.foods[0];\n                let nutrientFacts = {};\n                firstValue.foodNutrients.forEach((nutrientFact) => {\n                    switch (nutrientFact.nutrientName) {\n                        \n                    }\n                    if (nutrientFact.nutrientName === \"Protein\") {\n                        nutrientFacts['Protein']= nutrientFact.value\n                    }\n                    else if (nutrientFact.nutrientName === \"Carbohydrate, by difference\") {\n                        nutrientFacts['Carbohydrate']= nutrientFact.value\n                    }\n                    else if (nutrientFact.nutrientName === \"Energy (Atwater General Factors)\") {\n                        nutrientFacts['kcal']= nutrientFact.value\n                    }\n                    else if (nutrientFact.nutrientName === \"Total lipid (fat)\") {\n                        nutrientFacts['lipid']= nutrientFact.value\n                    }\n                    else if (nutrientFact.nutrientName === \"Sugars, Total NLEA\") {\n                        nutrientFacts['sugars']= nutrientFact.value\n                    }\n                })\n                this.setState({\n                    rawValue: firstValue,\n                    fdcId: firstValue.fdcId,\n                    foodCategory: firstValue.foodCategory,\n                    description: firstValue.description,\n                    energy: firstValue.foodNutrients\n                })\n            })\n            .catch(err => { console.log(err);});\n\n        alert('Une recette a été envoyé : ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n    handleClickIngredients(event) {\n        let ingredients = this.state.ingredients.slice();\n        ingredients.push(this.state.new);\n        this.setState({\n            ingredients: ingredients\n        });\n        event.preventDefault();\n    }\n    addIng() {\n        let ingredients =this.state.ingredients.slice();\n        ingredients.push('new');\n        this.setState({\n            ingredients: ingredients\n        });\n    }\n    render() {\n        return (\n            <Container className=\"p-3 w-50\">\n                    <Form>\n                        <Form.Group controlId={'compute.' + this.props.index} className=\"mb-3 w-50\">\n                            <Form.Label>Ingredient n°{this.props.index}</Form.Label>\n                            <Form.Control type=\"text\" name=\"new\" placeholder={this.props.ing} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                        </Form.Group>\n                        {/*<Button variant=\"primary\" onClick={this.handleClickIngredients}>*/}\n                        {/*add this ingredient*/}\n                        {/*</Button>*/}\n                    </Form>\n            </Container>\n        );\n    }\n}\nexport default AddIngredient;"]},"metadata":{},"sourceType":"module"}