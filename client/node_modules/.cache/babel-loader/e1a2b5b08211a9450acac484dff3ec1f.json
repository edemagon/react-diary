{"ast":null,"code":"var _jsxFileName = \"/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js\";\nimport React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddIngredient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      userInput: '',\n      choices: []\n    };\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  } // mise Ã  jour userInput\n\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  render() {\n    let showSelection;\n\n    if (this.props.ing.value) {\n      showSelection = /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: this.props.ing.value.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: this.props.ing.value.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [this.props.ing.value.nutrientFacts.kcal, \" Kcal, \", this.props.ing.value.nutrientFacts.carbohydrate, \" G, \", this.props.ing.value.nutrientFacts.protein, \" P, \", this.props.ing.value.nutrientFacts.lipid, \" L\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }, this);\n    } else {\n      showSelection = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: 'compute.' + this.props.index,\n          className: \"mb-3 w-50\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Ingredient n\\xB0\", this.props.index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"userInputName\",\n            placeholder: this.props.ing.userInputName,\n            onChange: e => this.props.handleChangeIng(e, this.props.index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"userInputQuantity\",\n            placeholder: this.props.ing.userInputQuantity,\n            onChange: e => this.props.handleChangeIng(e, this.props.index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: e => {\n            this.state.show = true;\n            this.props.findIng(e, this.props.index);\n          },\n          children: \"Show ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"pl-6\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Select ingredient from list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: !this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [choice.description, /*#__PURE__*/_jsxDEV(\"button\", {\n                  variant: \"primary\",\n                  onClick: e => {\n                    this.props.selectChoice(e, this.props.index, index);\n                    this.handleClose();\n                  },\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, 'choices.' + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), showSelection, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: e => this.props.removeIng(e, this.props.index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddIngredient;","map":{"version":3,"sources":["/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/AddIngredient.js"],"names":["React","Form","Card","Modal","Button","Container","AddIngredient","Component","constructor","props","handleChange","bind","handleShow","handleClose","state","show","userInput","choices","setState","event","target","name","value","render","showSelection","ing","width","description","category","nutrientFacts","kcal","carbohydrate","protein","lipid","index","userInputName","e","handleChangeIng","userInputQuantity","findIng","map","choice","selectChoice","removeIng"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\n\nclass AddIngredient extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            show: false,\n            userInput: '',\n            choices: []\n        };\n    }\n    handleShow() {\n        this.setState({show: true});\n    }\n    handleClose() {\n        this.setState({show: false});\n    }\n    // mise Ã  jour userInput\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n    render() {\n        let showSelection;\n        if (this.props.ing.value) {\n            showSelection = <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                    <Card.Title>{this.props.ing.value.description}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{this.props.ing.value.category}</Card.Subtitle>\n                    <Card.Text>\n                        {this.props.ing.value.nutrientFacts.kcal} Kcal, {this.props.ing.value.nutrientFacts.carbohydrate} G, {this.props.ing.value.nutrientFacts.protein} P, {this.props.ing.value.nutrientFacts.lipid} L\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        }\n        else {\n            showSelection = <p><Form.Group controlId={'compute.' + this.props.index} className=\"mb-3 w-50\">\n                <Form.Label>Ingredient nÂ°{this.props.index}</Form.Label>\n                <Form.Control type=\"text\" name=\"userInputName\" placeholder={this.props.ing.userInputName} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n                <Form.Control type=\"text\" name=\"userInputQuantity\" placeholder={this.props.ing.userInputQuantity} onChange={e => this.props.handleChangeIng(e, this.props.index)}/>\n            </Form.Group>\n                <Button variant=\"primary\" onClick={e => {this.state.show = true; this.props.findIng(e, this.props.index)}}>\n                    Show ingredients\n                </Button></p>\n        }\n        return (\n            <Container className=\"pl-6\">\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Select ingredient from list</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ul>\n                            {!this.props.ing.value && this.props.ing.choices && this.props.ing.choices.map((choice, index) => {\n                                return (\n                                    <li key={'choices.' + index}>\n                                        {choice.description}\n                                        <button variant=\"primary\" onClick={e => {this.props.selectChoice(e, this.props.index, index); this.handleClose()}}>\n                                            Select\n                                        </button>\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </Modal.Body>\n                </Modal>\n                {showSelection}\n                        <Button variant=\"danger\" onClick={e => this.props.removeIng(e, this.props.index)}>\n                            Remove\n                        </Button>\n            </Container>\n        );\n    }\n}\nexport default AddIngredient;"]},"metadata":{},"sourceType":"module"}