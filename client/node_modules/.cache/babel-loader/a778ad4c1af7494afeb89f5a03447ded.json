{"ast":null,"code":"var _jsxFileName = \"/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/ComputeRecipe.js\";\nimport React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport AddIngredient from './AddIngredient.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ComputeRecipe extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeIng = this.handleChangeIng.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.addIng = this.addIng.bind(this);\n    this.confirmAdd = this.confirmAdd.bind(this);\n    this.handleClickIngredients = this.handleClickIngredients.bind(this);\n    this.state = {\n      new: '',\n      title: 'undef',\n      type: 'undef',\n      ingredients: [],\n      kcal: 0,\n      prot: 0,\n      Glu: 0,\n      lip: 0\n    };\n  }\n\n  calculateNutrients() {}\n\n  confirmAdd(index, newIng) {\n    let ingredients = this.state.ingredients.slice();\n    ingredients[index] = newIng;\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  handleChangeIng(event, index) {\n    const target = event.target;\n    const value = target.value;\n    let ingredients = this.state.ingredients.slice();\n    ingredients[index] = value;\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  handleClick(event) {\n    alert('Une recette a été envoyé : ' + JSON.stringify(this.state));\n    event.preventDefault();\n  }\n\n  handleClickIngredients(event) {\n    let ingredients = this.state.ingredients.slice();\n    ingredients.push(this.state.new);\n    this.setState({\n      ingredients: ingredients\n    });\n    event.preventDefault();\n  }\n\n  addIng() {\n    let ingredients = this.state.ingredients.slice();\n    ingredients.push({\n      fdcId: '',\n      foodCategory: '',\n      description: '',\n      nutrientFacts: {\n        protein: '',\n        carbohydrate: '',\n        kcal: '',\n        lipid: '',\n        sugars: ''\n      }\n    });\n    this.setState({\n      ingredients: ingredients\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3 w-50\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleClick,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"compute.type\",\n          className: \"w-50\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Choose article Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"type\",\n            value: this.state.type,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"choose\",\n              children: \"Choose\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dessert\",\n              children: \"Dessert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"plat\",\n              children: \"Plat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"compute.title\",\n          className: \"mb-3 w-50\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Titre de la recette\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"title\",\n            placeholder: this.state.title,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), this.state.ingredients.map((ing, index) => {\n          return /*#__PURE__*/_jsxDEV(AddIngredient, {\n            index: index,\n            confirmAdd: this.confirmAdd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this) // <Form>\n          //     <Form.Group controlId={'compute.' + index} className=\"mb-3 w-50\">\n          //         <Form.Label>Ingredient n°{index}</Form.Label>\n          //         <Form.Control type=\"text\" name=\"new\" placeholder={ing} onChange={e => this.handleChangeIng(e, index)}/>\n          //     </Form.Group>\n          //     {/*<Button variant=\"primary\" onClick={this.handleClickIngredients}>*/}\n          //         {/*add this ingredient*/}\n          //     {/*</Button>*/}\n          // </Form>\n          ;\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.addIng,\n          className: \"m-3\",\n          children: \"Add ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"submit\",\n          className: \"m-3\",\n          children: \"create recipe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"La recette de \", this.state.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: this.state.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.ingredients.map(ing => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: ing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ComputeRecipe;","map":{"version":3,"sources":["/Users/i345275/Documents/FORMATIONS/REACT/diary-one/src/ComputeRecipe.js"],"names":["React","Form","Button","Container","AddIngredient","ComputeRecipe","Component","constructor","props","handleChange","bind","handleChangeIng","handleClick","addIng","confirmAdd","handleClickIngredients","state","new","title","type","ingredients","kcal","prot","Glu","lip","calculateNutrients","index","newIng","slice","setState","event","target","name","value","alert","JSON","stringify","preventDefault","push","fdcId","foodCategory","description","nutrientFacts","protein","carbohydrate","lipid","sugars","render","map","ing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport AddIngredient from './AddIngredient.js';\n\n\nclass ComputeRecipe extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeIng = this.handleChangeIng.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.addIng = this.addIng.bind(this);\n        this.confirmAdd = this.confirmAdd.bind(this);\n        this.handleClickIngredients = this.handleClickIngredients.bind(this);\n        this.state = {\n            new: '',\n            title: 'undef',\n            type: 'undef',\n            ingredients: [],\n            kcal: 0,\n            prot: 0,\n            Glu: 0,\n            lip: 0\n        };\n    }\n    calculateNutrients () {\n\n    }\n    confirmAdd(index, newIng) {\n        let ingredients = this.state.ingredients.slice();\n        ingredients[index] = newIng;\n        this.setState({\n            ingredients: ingredients\n        });\n    }\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n            [name]: target.value\n        });\n    }\n    handleChangeIng(event, index) {\n        const target = event.target;\n        const value = target.value;\n        let ingredients = this.state.ingredients.slice();\n        ingredients[index] = value;\n        this.setState({\n            ingredients: ingredients\n        });\n    }\n    handleClick(event) {\n        alert('Une recette a été envoyé : ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n    handleClickIngredients(event) {\n        let ingredients = this.state.ingredients.slice();\n        ingredients.push(this.state.new);\n        this.setState({\n            ingredients: ingredients\n        });\n        event.preventDefault();\n    }\n    addIng() {\n        let ingredients =this.state.ingredients.slice();\n        ingredients.push({\n            fdcId: '',\n            foodCategory: '',\n            description: '',\n            nutrientFacts: {\n                protein: '',\n                carbohydrate: '',\n                kcal: '',\n                lipid: '',\n                sugars: ''\n            }\n        });\n        this.setState({\n            ingredients: ingredients\n        });\n    }\n    render() {\n        return (\n            <Container className=\"p-3 w-50\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group controlId=\"compute.type\" className=\"w-50\">\n                        <Form.Label>Choose article Type</Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            name=\"type\"\n                            value={this.state.type}\n                            onChange={this.handleChange}\n                        >\n                            <option value=\"choose\">Choose</option>\n                            <option value=\"dessert\">Dessert</option>\n                            <option value=\"plat\">Plat</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='compute.title' className=\"mb-3 w-50\">\n                        <Form.Label>Titre de la recette</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" placeholder={this.state.title} onChange={this.handleChange}/>\n                    </Form.Group>\n                {this.state.ingredients.map((ing, index) => {\n                    return (\n                        <AddIngredient index={index} confirmAdd={this.confirmAdd}/>\n                        // <Form>\n                        //     <Form.Group controlId={'compute.' + index} className=\"mb-3 w-50\">\n                        //         <Form.Label>Ingredient n°{index}</Form.Label>\n                        //         <Form.Control type=\"text\" name=\"new\" placeholder={ing} onChange={e => this.handleChangeIng(e, index)}/>\n                        //     </Form.Group>\n                        //     {/*<Button variant=\"primary\" onClick={this.handleClickIngredients}>*/}\n                        //         {/*add this ingredient*/}\n                        //     {/*</Button>*/}\n                        // </Form>\n                    );\n                })}\n                    <Button variant=\"primary\" onClick={this.addIng} className=\"m-3\">\n                        Add ingredient\n                    </Button>\n                    <Button variant=\"danger\" type=\"submit\" className=\"m-3\">\n                        create recipe\n                    </Button>\n                </Form>\n\n                <div>\n                    <p>La recette de {this.state.title}</p>\n                    <i>{this.state.type}</i>\n                    <ul>\n                        {this.state.ingredients.map((ing) => {\n                            return <li>{ing}</li>\n                        })}\n                    </ul>\n                </div>\n            </Container>\n        );\n    }\n}\nexport default ComputeRecipe;"]},"metadata":{},"sourceType":"module"}